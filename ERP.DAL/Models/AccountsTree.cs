//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ERP.DAL
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations.Schema;
    using ERP.DAL.Models;

    public partial class AccountsTree : BaseModel
    {
        public AccountsTree()
        {
            this.AccountsTreesChildren = new HashSet<AccountsTree>();

            this.Assets = new HashSet<Asset>();
            this.AssetsParents = new HashSet<Asset>();
            this.AssetsExpenses = new HashSet<Asset>();
            this.AssetsDestructions = new HashSet<Asset>();

            this.BankAccounts = new HashSet<BankAccount>();
            this.EmployeeReturnCustodies = new HashSet<EmployeeReturnCustody>();
            this.ExpenseIncomes = new HashSet<ExpenseIncome>();
            this.ExpenseTypes = new HashSet<ExpenseType>();
            this.GeneralDailies = new HashSet<GeneralDaily>();
            this.GeneralRecordDetails = new HashSet<GeneralRecordDetail>();
            this.IncomeTypes = new HashSet<IncomeType>();
            this.PersonsCustomers = new HashSet<Person>();
            this.PersonsSuppliers = new HashSet<Person>();
            this.PersonsCustomersEmps = new HashSet<Person>();
            this.ProductionOrderExpenses = new HashSet<ProductionOrderExpens>();
            this.PurchaseBackInvoicesExpenses = new HashSet<PurchaseBackInvoicesExpens>();
            this.PurchaseInvoicesExpenses = new HashSet<PurchaseInvoicesExpens>();
            this.Safes = new HashSet<Safe>();
            this.SellBackInvoiceIncomes = new HashSet<SellBackInvoiceIncome>();
            this.SellInvoiceIncomes = new HashSet<SellInvoiceIncome>();
            this.Stores = new HashSet<Store>();
            this.VoucherDetails = new HashSet<VoucherDetail>();
            this.Vouchers = new HashSet<Voucher>();
            this.AccountTreeIntialBalances = new HashSet<AccountTreeIntialBalance>();
            this.ItemIntialBalanceDetails = new HashSet<ItemIntialBalanceDetail>();

        }
    
        public long AccountNumber { get; set; }
        public string AccountName { get; set; }
        public string AccountNameEn { get; set; }
        [ForeignKey(nameof(AccountsTreeParent))]
        public Nullable<Guid> ParentId { get; set; }
        [ForeignKey(nameof(SelectorType))]
        public Nullable<int> TypeId { get; set; }
        public Nullable<int> AccountLevel { get; set; }
        public bool SelectedTree { get; set; }

        //AccountsTrees1
        public virtual ICollection<AccountsTree> AccountsTreesChildren { get; set; }
        //AccountsTree1
        public virtual AccountsTree AccountsTreeParent { get; set; }

        public virtual SelectorType SelectorType { get; set; }


        [InverseProperty(nameof(Asset.AccountsTree))]
        public virtual ICollection<Asset> Assets { get; set; }
        //Assets1
        [InverseProperty(nameof(Asset.AccountsTreeParent))]
        public virtual ICollection<Asset> AssetsParents { get; set; }
        //Assets2
        [InverseProperty(nameof(Asset.AccountsTreeExpense))]
        public virtual ICollection<Asset> AssetsExpenses { get; set; }
        //Assets3
        [InverseProperty(nameof(Asset.AccountsTreeDestruction))]
        public virtual ICollection<Asset> AssetsDestructions { get; set; }
        


        public virtual ICollection<BankAccount> BankAccounts { get; set; }
        
        public virtual ICollection<EmployeeReturnCustody> EmployeeReturnCustodies { get; set; }
        
        public virtual ICollection<ExpenseIncome> ExpenseIncomes { get; set; }
        
        public virtual ICollection<ExpenseType> ExpenseTypes { get; set; }
        
        public virtual ICollection<GeneralDaily> GeneralDailies { get; set; }

        [InverseProperty(nameof(GeneralRecordDetail.AccountTree))]
        public virtual ICollection<GeneralRecordDetail> GeneralRecordDetails { get; set; }
        
        public virtual ICollection<IncomeType> IncomeTypes { get; set; }

        //Persons
        [InverseProperty(nameof(Person.AccountsTreeCustomer))]
        public virtual ICollection<Person> PersonsCustomers { get; set; }

        //Persons1
        [InverseProperty(nameof(Person.AccountsTreeSupplier))]
        public virtual ICollection<Person> PersonsSuppliers { get; set; }

        //Persons2
        [InverseProperty(nameof(Person.AccountTreeEmpCustody))]
        public virtual ICollection<Person> PersonsCustomersEmps { get; set; }
        
        public virtual ICollection<ProductionOrderExpens> ProductionOrderExpenses { get; set; }
        
        public virtual ICollection<PurchaseBackInvoicesExpens> PurchaseBackInvoicesExpenses { get; set; }
        
        public virtual ICollection<PurchaseInvoicesExpens> PurchaseInvoicesExpenses { get; set; }
        
        public virtual ICollection<Safe> Safes { get; set; }
        
        public virtual ICollection<SellBackInvoiceIncome> SellBackInvoiceIncomes { get; set; }
        
        public virtual ICollection<SellInvoiceIncome> SellInvoiceIncomes { get; set; }
        
        public virtual ICollection<Store> Stores { get; set; }
        public virtual ICollection<VoucherDetail> VoucherDetails { get; set; }
        public virtual ICollection<Voucher> Vouchers { get; set; }
        public virtual ICollection<AccountTreeIntialBalance> AccountTreeIntialBalances { get; set; }
        public virtual ICollection<ItemIntialBalanceDetail> ItemIntialBalanceDetails { get; set; }
    }
}

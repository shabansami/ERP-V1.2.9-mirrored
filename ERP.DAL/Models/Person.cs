//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ERP.DAL
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations.Schema;
    using ERP.DAL.Models;
    using ERP.DAL.Utilites;

    public partial class Person : BaseModel
    {
        public Person()
        {
            this.ChequesCustomer = new HashSet<Cheque>();
            this.ChequesSupplier = new HashSet<Cheque>();
            this.ContractVacations = new HashSet<ContractVacation>();
            this.CustomerPayments = new HashSet<CustomerPayment>();
            this.Employees = new HashSet<Employee>();
            this.InstallmentSchedules = new HashSet<InstallmentSchedule>();
            this.ItemPrices = new HashSet<ItemPrice>();
            this.ItemProductions = new HashSet<ItemProduction>();
            this.Maintenances = new HashSet<Maintenance>();
            this.PointOfSaleDefaultCustomers = new HashSet<PointOfSale>();
            this.PointOfSaleDefaultSuppliers = new HashSet<PointOfSale>();
            this.PriceInvoices = new HashSet<PriceInvoice>();
            this.PurchaseBackInvoices = new HashSet<PurchaseBackInvoice>();
            this.PurchaseInvoices = new HashSet<PurchaseInvoice>();
            this.Safes = new HashSet<Safe>();
            this.SaleMenAreas = new HashSet<SaleMenArea>();
            this.SaleMenCustomers = new HashSet<SaleMenCustomer>();
            this.SellBackInvoices = new HashSet<SellBackInvoice>();
            this.SellInvoices = new HashSet<SellInvoice>();
            this.StoreAdjustments = new HashSet<StoreAdjustment>();
            this.SupplierPayments = new HashSet<SupplierPayment>();
            this.Users = new HashSet<User>();
            this.PersonIntialBalances = new HashSet<PersonIntialBalance>();
        }

        //AccountsTreeID
        [ForeignKey(nameof(AccountsTreeCustomer)), ReNamed("AccountsTreeId")]
        public Nullable<Guid> AccountsTreeCustomerId { get; set; }
        //AccountTreeIdSupplier
        [ForeignKey(nameof(AccountsTreeSupplier)), ReNamed("AccountTreeIdSupplier")]
        public Nullable<Guid> AccountTreeSupplierId { get; set; }
        //AccountTreeIdCustody
        [ForeignKey(nameof(AccountTreeEmpCustody)), ReNamed("AccountTreeIdCustody")]
        public Nullable<Guid> AccountTreeEmpCustodyId { get; set; }

        [ForeignKey(nameof(PersonType))]
        public Nullable<int> PersonTypeId { get; set; }
        [ForeignKey(nameof(PersonCategory))]
        public Nullable<Guid> PersonCategoryId { get; set; }
        //public System.Guid PersonGuid { get; set; }
        public string Name { get; set; }
        public string Address { get; set; }
        public string Address2 { get; set; }
        public string Mob1 { get; set; }
        public string Mob2 { get; set; }
        public string Tel { get; set; }
        [ForeignKey(nameof(Area))]
        public Nullable<Guid> AreaId { get; set; }
        [ForeignKey(nameof(PersonParent))]
        public Nullable<Guid> ParentId { get; set; }
        public string EntityName { get; set; }
        [ForeignKey(nameof(Gender))]
        public Nullable<int> GenderId { get; set; }
        public string ImageName { get; set; }
        public string Notes { get; set; }
        public string LocationPath { get; set; }
        public string TaxNumber { get; set; }
        public string CommercialRegistrationNo { get; set; }
        public string WebSite { get; set; }
        public string Job { get; set; }
        public string Email { get; set; }
        public string Transfer { get; set; }
        public string NameEn { get; set; }

        [ForeignKey(nameof(Nationality))]
        public int? NationalityId { get; set; }
        public double LimitDangerSell { get; set; }//�� ��������� ����� ������ 
        [ForeignKey(nameof(District))]
        public Guid? DistrictId { get; set; }
        public bool IsActive { get; set; }
        //AccountsTree
        public virtual AccountsTree AccountsTreeCustomer { get; set; }
        //AccountsTree1
        public virtual AccountsTree AccountsTreeSupplier { get; set; }
        //AccountsTree2
        public virtual AccountsTree AccountTreeEmpCustody { get; set; }
        public virtual PersonType PersonType { get; set; }
        public virtual PersonCategory PersonCategory { get; set; }
        public virtual Area Area { get; set; }
        public virtual Person PersonParent { get; set; }
        public virtual Gender Gender { get; set; }
        public virtual Nationality Nationality { get; set; }
        public virtual District District { get; set; }




        [InverseProperty(nameof(Cheque.PersonCustomer))]
        public virtual ICollection<Cheque> ChequesCustomer { get; set; }
        [InverseProperty(nameof(Cheque.PersonSupplier))]
        public virtual ICollection<Cheque> ChequesSupplier { get; set; }


        public virtual ICollection<ContractVacation> ContractVacations { get; set; }
        public virtual ICollection<CustomerPayment> CustomerPayments { get; set; }
        public virtual ICollection<Employee> Employees { get; set; }
        public virtual ICollection<InstallmentSchedule> InstallmentSchedules { get; set; }
        public virtual ICollection<ItemPrice> ItemPrices { get; set; }
        public virtual ICollection<ItemProduction> ItemProductions { get; set; }
        public virtual ICollection<Maintenance> Maintenances { get; set; }


        //PointOfSales
        [InverseProperty(nameof(PointOfSale.PersonCustomer))]
        public virtual ICollection<PointOfSale> PointOfSaleDefaultCustomers { get; set; }
        //PointOfSales1
        [InverseProperty(nameof(PointOfSale.PersonSupplier))]
        public virtual ICollection<PointOfSale> PointOfSaleDefaultSuppliers { get; set; }


        public virtual ICollection<PriceInvoice> PriceInvoices { get; set; }
        public virtual ICollection<PurchaseBackInvoice> PurchaseBackInvoices { get; set; }
        public virtual ICollection<PurchaseInvoice> PurchaseInvoices { get; set; }
        public virtual ICollection<Safe> Safes { get; set; }
        public virtual ICollection<SaleMenArea> SaleMenAreas { get; set; }
        public virtual ICollection<SaleMenCustomer> SaleMenCustomers { get; set; }
        public virtual ICollection<SellBackInvoice> SellBackInvoices { get; set; }
        public virtual ICollection<SellInvoice> SellInvoices { get; set; }
        public virtual ICollection<StoreAdjustment> StoreAdjustments { get; set; }
        public virtual ICollection<SupplierPayment> SupplierPayments { get; set; }
        public virtual ICollection<User> Users { get; set; }
        public virtual ICollection<PersonIntialBalance> PersonIntialBalances { get; set; }
    }
}

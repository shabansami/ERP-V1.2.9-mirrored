@model ERP.Web.ViewModels.ItemStockBalanceVM
@using ERP.Web.Utilites
@using ERP.Web.Services
@{ ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    SelectList list = (SelectList)ViewBag.ParemeterReportList; }
@section PageTitle1{تقرير المخزون}
@section PageTitle2{بحث}
@section Button1{@null}
@section Button1Link{@null}
@section icon{@null}
<div class="row">
    <div class="col-12">
        <div class="card din-bold">
            <div class="card-header">
                <div class="row">
                    <div class="col-sm-6">
                        <h4 class=" din-bold">تقرير المخزون</h4>
                    </div>
                    <div class="col-sm-6">
                        <div class="fa-pull-left">
                            <div class="dropdown">
                                <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span class="svg-icon svg-icon-md">
                                        <!--begin::Svg Icon | path:assets/media/svg/icons/Design/PenAndRuller.svg-->
                                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                            <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                                <rect x="0" y="0" width="24" height="24" />
                                                <path d="M3,16 L5,16 C5.55228475,16 6,15.5522847 6,15 C6,14.4477153 5.55228475,14 5,14 L3,14 L3,12 L5,12 C5.55228475,12 6,11.5522847 6,11 C6,10.4477153 5.55228475,10 5,10 L3,10 L3,8 L5,8 C5.55228475,8 6,7.55228475 6,7 C6,6.44771525 5.55228475,6 5,6 L3,6 L3,4 C3,3.44771525 3.44771525,3 4,3 L10,3 C10.5522847,3 11,3.44771525 11,4 L11,19 C11,19.5522847 10.5522847,20 10,20 L4,20 C3.44771525,20 3,19.5522847 3,19 L3,16 Z" fill="#000000" opacity="0.3" />
                                                <path d="M16,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,15.2485298 C21,15.7329761 20.8241635,16.200956 20.5051534,16.565539 L17.8762883,19.5699562 C17.6944473,19.7777745 17.378566,19.7988332 17.1707477,19.6169922 C17.1540423,19.602375 17.1383289,19.5866616 17.1237117,19.5699562 L14.4948466,16.565539 C14.1758365,16.200956 14,15.7329761 14,15.2485298 L14,5 C14,3.8954305 14.8954305,3 16,3 Z" fill="#000000" />
                                            </g>
                                        </svg>
                                        <!--end::Svg Icon-->
                                    </span> تصدير الى<i class="mdi mdi-chevron-down"></i>
                                </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <a href="#" class="dropdown-item" id="export_print">
                                        <i class="fa fa-print"></i>
                                        طباعة
                                    </a>
                                    <a href="#" class="dropdown-item" id="export_excel">
                                        <i class="fa fa-file-excel"></i>
                                        <span>إكسل</span>
                                    </a>
                                    <a href="#" class="dropdown-item" id="export_copy">
                                        <span>
                                            <i class="fa fa-copy"></i>
                                        </span>
                                        <span>نسخ</span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Index", "RptItemStockBalances", FormMethod.Get, new { id = "form1" }))
                {
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="form-group">
                                <div>
                                    <label> المجموعة الاساسية</label>
                                    <input name="groupBasic" type="text" class="form-control" id="groupBasic" autocomplete="off" />
                                    @Html.HiddenFor(m => m.ItemGroup)
                                    <input type="hidden" id="isFirstInitPage" value="1" />
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <div>
                                    <label> الصنف</label>
                                    @Html.DropDownList("ItemId", null, "اختر عنصر من القائمة", htmlAttributes: new { @class = "form-select   din-med" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <div>
                                    <label> الفرع</label>
                                    @Html.DropDownList("BranchId", null, "اختر عنصر من القائمة", htmlAttributes: new { @class = "form-select   din-med", @onchange = "onBranchChange();" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <div>
                                    <label> المخزن</label>
                                    @Html.DropDownList("StoreId", null, "اختر عنصر من القائمة", htmlAttributes: new { @class = "form-select   din-med" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <div>
                                    <label> احتساب تكلفة الشراء</label>
                                    @Html.DropDownList("CostCalculationPurchaseId", null, "اختر عنصر من القائمة", htmlAttributes: new { @class = "form-select   din-med" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <div>
                                    <label> احتساب تكلفة البيع</label>
                                    @Html.DropDownList("CostCalculationSellId", null, "اختر عنصر من القائمة", htmlAttributes: new { @class = "form-select   din-med" })
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-3">
                            <div class="form-group">
                                <div>
                                    <label> من تاريخ</label>
                                    @Html.TextBoxFor(m => m.dtFrom, "{0:yyyy-MM-dd}", htmlAttributes: new { @class = "form-control din-med", @type = "date" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <div>
                                    <label> إلي تاريخ</label>
                                    @Html.TextBoxFor(m => m.dtTo, "{0:yyyy-MM-dd}", htmlAttributes: new { @class = "form-control din-med", @type = "date" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                <div>
                                    <label> محددات العرض</label>
                                    @*@Html.DropDownList("ParemeterReportList", (SelectList)ViewBag.ParemeterReportList, "اختر عنصر من القائمة", htmlAttributes: new { @multiple = "multiple", @class = "form-control kt-bootstrap-select din-med" })*@
                                    @Html.ListBox("ParemeterReportList", (SelectList)ViewBag.ParemeterReportList, htmlAttributes: new { @multiple = "multiple", @class = "form-control kt-bootstrap-select din-med" })
                                    @*<select class="form-control kt-bootstrap-select" id="kt_bootstrap_select" multiple="multiple" name="select">
                                <optgroup label="Picnic" data-max-options="2">
                                    <option>Mustard</option>
                                    <option>Ketchup</option>
                                    <option>Relish</option>
                                </optgroup>
                                <optgroup label="Camping" data-max-options="2">
                                    <option>Tent</option>
                                    <option>Flashlight</option>
                                    <option>Toilet Paper</option>
                                </optgroup>
                            </select>*@
                                    <span class="form-text text-muted">اختر البيانات المراد عرضها فى الجدول</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group mb-0 w-100">
                                <div class="input-icon input-icon-right">
                                    <label>بحث</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control" style="text-align:start;" id="kt_datatable_search_query" placeholder="ادخل كلمة البحث">
                                        <div class="input-group-text">
                                            <i class="bx bx-search-alt align-middle"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                <div>
                                    <label> .</label>
                                    <button type="submit" class="btn btn-primary font-weight-bold btn-square btn-shadow din-bold w-100"><i class="bx bx-search-alt m-1"></i>بــحث</button>
                                    @*<a href="/RptAccountStatements/Search?AccountTreeId=@Model.AccountTreeId&dtFrom=@Model.dtFrom&dtTo=@Model.dtTo"  class="btn btn-primary font-weight-bold btn-square btn-shadow din-bold w-100"><i class="bx bx-search-alt m-1"></i>بــحث</a>*@
                                </div>
                            </div>
                        </div>
                    </div>

                    <table class="table table-separate table-head-custom table-foot-custom table-checkable" id="kt_datatable">
                        <thead>
                            <tr>

                                <th style="display:none;">ItemId</th>
                                <th>اسم الصنف</th>
                                <th>المخزن</th>
                                <th>الوحدة</th>
                                <th>رصيد الصنف</th>
                                @{
                                    foreach (SelectListItem item in list.Items)
                                    {
                                        if (item.Selected)
                                        {
                                            <th>@item.Text</th>
                                        }

                                    }
                                }
                                <th>تكلفة شراء</th>
                                <th>تكلفة بيع</th>
                                <th>اجمالى المخزون شراء</th>
                                <th>اجمالى المخزون بيع</th>

                            </tr>
                        </thead>
                        @*TotalIn=1,//اجمالى وارد
                TotalOut, //اجمالى صادر
                Intial, //رصيد اول
                Purchase,//شراء
                PurchaseBack,//مرتجع شراء
                Sell, //بيع
                SellBack,//مرتجع بيع
                StoreTranFrom,//تحويل من
                StoreTranTo,//تحويل الى
                Inventory,//جرد
                ProductionOrder,//اوامر الانتاج
                ProductionOrderDetails,//خامات اوامر انتاج
                Maintenance,//صيانة
                MaintenanceSpareParts,//قطع غيار صيانة
                StorePermissionReceive,//اذن استلام
                StorePermissionLeave,//اذنة صرف*@
                        <tbody>
                        @foreach (var item in Model.ItemStocks)
                        {
                            <tr>
                                <td style="display:none;">@item.ItemId</td>
                                <td>@item.ItemName</td>
                                <td>@item.StoreName</td>
                                <td>@item.ItemUnit</td>
                                <td>@item.ItemBalance</td>
                                @foreach (SelectListItem li in list.Items)
                                {
                                    if (li.Selected)
                                    {
                                        if (int.Parse(li.Value) == (int)ParemeterReport.TotalIn)
                                        {
                                            <td>@item.TotalIn</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.TotalOut)
                                        {
                                            <td>@item.TotalOut</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.Intial)
                                        {
                                            <td>@item.InitialBalances</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.Purchase)
                                        {
                                            <td>@item.Purchases</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.PurchaseBack)
                                        {
                                            <td>@item.BackPurchases</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.Sell)
                                        {
                                            <td>@item.Sell</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.SellBack)
                                        {
                                            <td>@item.SellBack  </td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.StoreTranFrom)
                                        {
                                            <td>@item.StoreTranFrom</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.StoreTranTo)
                                        {
                                            <td>@item.StoreTranTo</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.Inventory)
                                        {
                                            <td>@item.Inventories</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.ProductionOrder)
                                        {
                                            <td>@item.ProductionOrders</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.ProductionOrderDetails)
                                        {
                                            <td>@item.ProductionOrderDetails</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.Maintenance)
                                        {
                                            <td>@item.Maintenances</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.MaintenanceSpareParts)
                                        {
                                            <td>@item.MaintenanceSpareParts</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.Damages)
                                        {
                                            <td>@item.Damage</td>
                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.StorePermissionReceive)
                                        {
                                            <td>@item.StorePermissionReceive</td>

                                        }
                                        else if (int.Parse(li.Value) == (int)ParemeterReport.StorePermissionLeave)
                                        {
                                            <td>@item.StorePermissionLeave</td>
                                        }
                                        else
                                        {
                                            <td>0</td>
                                        }
                                    }
                                }
                                <td>@item.ItemCostPurchase</td>
                                <td>@item.ItemCostSell</td>
                                <td>@item.TotalItemCostPurchase</td>
                                <td>@item.TotalItemCostSell</td>
                            </tr>
                        }
                        </tbody>
                        <tfoot class="footerCl">
                        </tfoot>
                    </table>
                }

                   
            </div>
        </div>
    </div>

</div>


@section Scripts
{

    <script>
        function onBranchChange() {
            $.get("/SharedDataSources/getStoresOnBranchChanged", { id: $("#BranchId").val() }, function (data) {
                $("#StoreId").empty();
                $("#StoreId").append("<option value=>اختر عنصر من القائمة</option>");
                $.each(data, function (index, row) {
                    $("#StoreId").append("<option value='" + row.Id + "'>" + row.Name + "</option>");
                });
            });
        };
        $(document).ready(function () {
            $('#kt_datatable').DataTable({
                dom: "<'row'<'col-sm-12'tr>><'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>",
                buttons: [
                    {
                        extend: 'print',
                        //footer: true,
                        className: 'green glyphicon glyphicon-print',
                        title: function () {
                            return 'تقرير المخزون';
                        },
                        customize: function (win) {
                            $(win.document.body)
                                //.css('font-size', '20pt')
                                .prepend(
                                    '<img src=' + localStorage.getItem("logo") + ' style="position:absolute; top:25%; right:10%;opacity: 0.2;" />'
                                );
                            $(win.document.body).find('table')
                                //.addClass('compact')
                                .css('font-size', 'inherit')
                                .css('direction', 'rtl')
                                .css('text-align', 'right')
                                .find('.actions').css('display', 'none');
                            //توسيط عنوان التقرير
                            $(win.document.body).find('h1').css('text-align', 'center');
                        },
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        extend: "copyHtml5",
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        extend: "excelHtml5",
                        filename: "تقرير المخزون",
                        title: "تقرير المخزون",
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                ],
                language: {
                    search: "البحث",
                    lengthMenu: "عرض _MENU_ عنصر لكل صفحة",
                    info: "العناصر من_START_ الي _END_ من اصل _TOTAL_ عنصر",
                    processing: "جارى التحميل",
                    zeroRecords: "لا يوجد سجلات لعرضها",
                    infoFiltered: "",
                    infoEmpty: 'لا يوجد سجلات متاحه',
                },
                "order": [[0, "asc"]]
                //"order": [[0, "desc"]]
            });
            $('#export_print').on('click', function (e) {
                e.preventDefault();
                $('#kt_datatable').DataTable().button('.buttons-print').trigger();
            });
            $('#export_copy').on('click', function (e) {
                e.preventDefault();
                $('#kt_datatable').DataTable().button('.buttons-copy').trigger();
            });
            $('#export_excel').on('click', function (e) {
                e.preventDefault();
                $('#kt_datatable').DataTable().button('.buttons-excel').trigger();
            });
            $('#kt_datatable_search_query').on('keyup', function () {
                $('#kt_datatable').DataTable().search(this.value).draw();
            });
        });
        var treeBasic;
        $(document).ready(function () {
            //المجموعة الاساسية
            var dsBasic = [];
            $.get("/SharedDataSources/onGroupTypeChange", { id: 1 }, function (data) {
                treeBasic.setSource(data);
            });
            treeBasic = $('#groupBasic').comboTree({
                source: dsBasic,
                isMultiple: false,
                collapse: true,
                //selectableLastNode: true
            });
            treeBasic.onChange(function () {
                if (treeBasic.getSelectedIds() != null) {
                    $('#ItemGroup').val(treeBasic.getSelectedIds()[0]);
                    $.get("/SharedDataSources/ItemsOnGroupChanged", { id: treeBasic.getSelectedIds()[0] }, function (data) {
                        $("#ItemId").empty();
                        $("#ItemId").append("<option value=>اختر عنصر من القائمة</option>");
                        $.each(data, function (index, row) {
                            $("#ItemId").append("<option value='" + row.Id + "'>" + row.Name + "</option>");
                        });
                    });
                }
            });
            // ============== نهاية المجموعة الاساسية
        })
    </script>
}








